plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.liquibase.gradle" version "2.0.4"
}


ext {
    set('springCloudVersion', "2021.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

group = 'az.client'


defaultTasks 'bootRun'

springBoot {
    mainClass = 'az.client.ClientsApplication'
}


if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE'
    implementation "org.liquibase:liquibase-core"
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.modelmapper:modelmapper:${modelmapperVersion}"
    implementation "org.liquibase:liquibase-core"
    liquibaseRuntime "org.liquibase:liquibase-core"
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

    implementation "io.springfox:springfox-bean-validators:${springfox_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation "mysql:mysql-connector-java"
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation "org.testcontainers:testcontainers:${testcontainerVersion}"
    testImplementation "org.testcontainers:mysql:${testcontainerVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainerVersion}"
}



test {
    useJUnitPlatform()
}